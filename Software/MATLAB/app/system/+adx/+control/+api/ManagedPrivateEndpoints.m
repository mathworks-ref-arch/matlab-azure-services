classdef ManagedPrivateEndpoints < adx.control.BaseClient
    % ManagedPrivateEndpoints No description provided
    %
    % ManagedPrivateEndpoints Properties:
    %
    %   serverUri           - Base URI to use when calling the API. Allows using a different server
    %                         than specified in the original API spec.
    %   httpOptions         - HTTPOptions used by all requests.
    %   preferredAuthMethod - If operation supports multiple authentication methods, specified which
    %                         method to prefer.
    %   bearerToken         - If Bearer token authentication is used, the token can be supplied 
    %                         here. Note the token is only used if operations are called for which
    %                         the API explicitly specified that Bearer authentication is supported.
    %                         If this has not been specified in the spec but most operations do 
    %                         require Bearer authentication, consider adding the relevant header to
    %                         all requests in the preSend method.
    %   apiKey              - If API key authentication is used, the key can be supplied here. 
    %                         Note the key is only used if operations are called for which
    %                         the API explicitly specified that API key authentication is supported.
    %                         If this has not been specified in the spec but most operations do 
    %                         require API key authentication, consider adding the API key to all
    %                         requests in the preSend method.
    %   httpCredentials     - If Basic or Digest authentication is supported username/password
    %                         credentials can be supplied here as matlab.net.http.Credentials. Note 
    %                         these are only actively used if operations are called for which the 
    %                         API spec has specified they require Basic authentication. If this has
    %                         not been specified in the spec but most operations do require
    %                         Basic authentication, consider setting the Credentials property in the
    %                         httpOptions rather than through httpCredentials.
    %   cookies             - Cookie jar. The cookie jar is shared across all Api classes in the 
    %                         same package. All responses are automatically parsed for Set-Cookie
    %                         headers and cookies are automatically added to the jar. Similarly
    %                         cookies are added to outgoing requests if there are matching cookies 
    %                         in the jar for the given request. Cookies can also be added manually
    %                         by calling the setCookies method on the cookies property. The cookie
    %                         jar is also saved to disk (cookies.mat in the same directory as 
    %                         BaseClient) and reloaded in new MATLAB sessions.
    %
    % ManagedPrivateEndpoints Methods:
    %
    %   ManagedPrivateEndpoints - Constructor
    %   managedPrivateEndpointsCheckNameAvailability - 
    %   managedPrivateEndpointsCreateOrUpdate - 
    %   managedPrivateEndpointsDelete - 
    %   managedPrivateEndpointsGet - 
    %   managedPrivateEndpointsList - 
    %   managedPrivateEndpointsUpdate - 
    %
    % See Also: matlab.net.http.HTTPOptions, matlab.net.http.Credentials, 
    %   CookieJar.setCookies, control.BaseClient

    % This file is automatically generated using OpenAPI
    % Specification version: 2023-05-02
    % MATLAB Generator for OpenAPI version: 1.0.0
    % (c) 2023 MathWorks Inc.

    % Instruct MATLAB Code Analyzer to ignore unnecessary brackets
    %#ok<*NBRAK2> 

    % Class properties
    properties
    end

    % Class methods
    methods
        function obj = ManagedPrivateEndpoints(options)
            % ManagedPrivateEndpoints Constructor, creates a ManagedPrivateEndpoints instance.
            % When called without inputs, tries to load configuration
            % options from JSON file 'adx.Client.Settings.json'.
            % If this file is not present, the instance is initialized with 
            % default configuration option. An alternative configuration 
            % file can be provided through the "configFile" Name-Value pair.
            % All other properties of the instance can also be overridden 
            % using Name-Value pairs where Name equals the property name.
            % 
            % Examples:
            %
            %   % Create a client with default options and serverUri
            %   % as parsed from OpenAPI spec (if available)
            %   client = adx.control.api.ManagedPrivateEndpoints();
            %
            %   % Create a client for alternative server/base URI
            %   client = adx.control.api.ManagedPrivateEndpoints("serverUri","https://example.com:1234/api/");
            %
            %   % Create a client loading configuration options from 
            %   % JSON configuration file
            %   client = adx.control.api.ManagedPrivateEndpoints("configFile","myconfig.json");
            %
            %   % Create a client with alternative HTTPOptions and an API key
            %   client = adx.control.api.ManagedPrivateEndpoints("httpOptions",...
            %       matlab.net.http.HTTPOptions("ConnectTimeout",42),...
            %       "apiKey", "ABC123");

            arguments
                options.configFile string
                options.?adx.control.BaseClient
            end
            % Call base constructor to override any configured settings
            args = namedargs2cell(options);
            obj@adx.control.BaseClient(args{:})
        end

        function [code, result, response] = managedPrivateEndpointsCheckNameAvailability(obj, resourceGroupName, clusterName, api_version, subscriptionId, ManagedPrivateEndpointsCheckNameRequest)
            % managedPrivateEndpointsCheckNameAvailability No summary provided
            % Checks that the managed private endpoints resource name is valid and is not already in use.
            %
            % Required parameters:
            %   resourceGroupName - The name of the resource group. The name is case insensitive., Type: string
            %   clusterName - The name of the Kusto cluster., Type: string
            %   api_version - The API version to use for this operation., Type: string
            %   subscriptionId - The ID of the target subscription., Type: string
            %   ManagedPrivateEndpointsCheckNameRequest - The name of the resource., Type: ManagedPrivateEndpointsCheckNameRequest
            %       Required properties in the model for this call:
            %           name
            %           type
            %       Optional properties in the model for this call:
            %
            % No optional parameters
            %
            % Responses:
            %   200: OK -- Operation to check the kusto resource name availability was successful.
            %   0: Error response describing why the operation failed.
            %
            % Returns: CheckNameResult
            %
            % See Also: adx.control.models.CheckNameResult

            arguments
              obj adx.control.api.ManagedPrivateEndpoints
              resourceGroupName string
              clusterName string
              api_version string
              subscriptionId string
              ManagedPrivateEndpointsCheckNameRequest adx.control.models.ManagedPrivateEndpointsCheckNameRequest
            end

            % Create the request object
            request = matlab.net.http.RequestMessage();
            
            % Verify that operation supports returning JSON
            specAcceptHeaders = [...
                "application/json", ...
            ];
            if ismember("application/json",specAcceptHeaders)
                request.Header(end+1) = matlab.net.http.field.AcceptField('application/json');
            else
                error("control:api:managedPrivateEndpointsCheckNameAvailability:UnsupportedMediaType","Generated OpenAPI Classes only support 'application/json' MediaType.\n" + ...
                    "Operation '%s' does not support this. It may be possible to call this operation by first editing the generated code.","managedPrivateEndpointsCheckNameAvailability")
            end
            
            % Verify that operation supports JSON or FORM as input
            specContentTypeHeaders = [...
                "application/json", ...
            ];
            if ismember("application/json",specContentTypeHeaders)
                request.Header(end+1) = matlab.net.http.field.ContentTypeField('application/json');
            elseif ismember("application/x-www-form-urlencoded",specContentTypeHeaders)
                request.Header(end+1) = matlab.net.http.field.ContentTypeField('application/x-www-form-urlencoded');
            else
                error("control:api:managedPrivateEndpointsCheckNameAvailability:UnsupportedMediaType","Generated OpenAPI Classes only support 'application/json' and 'application/x-www-form-urlencoded' MediaTypes.\n" + ...
                    "Operation '%s' does not support this. It may be possible to call this operation by first editing the generated code.","managedPrivateEndpointsCheckNameAvailability")
            end
            
            % No header parameters

            % Configure default httpOptions
            httpOptions = obj.httpOptions;
            % Never convert API response
            httpOptions.ConvertResponse = false;

            % Configure request verb/method
            request.Method = matlab.net.http.RequestMethod('POST');

            % Build the request URI
            if ~isempty(obj.serverUri)
                % If URI specified in object, use that
                uri = obj.serverUri;
            else
                % If no server specified use base path from OpenAPI spec
                uri = matlab.net.URI("https://management.azure.com");
            end
            % Append the operation end-point
            uri.EncodedPath = uri.EncodedPath + "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Kusto/clusters/{clusterName}/managedPrivateEndpointsCheckNameAvailability";

            % Substitute path parameters
            uri.Path(uri.Path == "{" + "resourceGroupName" +"}") = resourceGroupName;
            uri.Path(uri.Path == "{" + "clusterName" +"}") = clusterName;
            uri.Path(uri.Path == "{" + "subscriptionId" +"}") = subscriptionId;

            % Set query parameters
            uri.Query(end+1) = matlab.net.QueryParameter("api-version", api_version);
            
            % Set JSON Body
            requiredProperties = [...
                "name",...
                "type",...
            ];
            optionalProperties = [...
            ];
            request.Body(1).Payload = ManagedPrivateEndpointsCheckNameRequest.getPayload(requiredProperties,optionalProperties);

            % No form body parameters

            % Operation does not require authorization

            % Add cookies if set
            request = obj.applyCookies(request, uri);

            % Call preSend
            [request, httpOptions, uri] = obj.preSend("managedPrivateEndpointsCheckNameAvailability", request, httpOptions, uri);

            % Perform the request
            [response, ~, history] = send(request, uri, httpOptions);

            % Handle cookies if set
            obj.setCookies(history);

            % Call postSend
            response = obj.postSend("managedPrivateEndpointsCheckNameAvailability", response, request, uri, httpOptions);

            % Handle response
            code = response.StatusCode;
            switch (code)
                case 200
                    result = adx.control.models.CheckNameResult(response.Body.Data);
                otherwise % Default output as specified in spec
                    result = adx.control.models.ErrorResponse(response.Body.Data);
            end
        
        end % managedPrivateEndpointsCheckNameAvailability method

        function [code, result, response] = managedPrivateEndpointsCreateOrUpdate(obj, subscriptionId, resourceGroupName, clusterName, managedPrivateEndpointName, api_version, ManagedPrivateEndpoint)
            % managedPrivateEndpointsCreateOrUpdate No summary provided
            % Creates a managed private endpoint.
            %
            % Required parameters:
            %   subscriptionId - The ID of the target subscription., Type: string
            %   resourceGroupName - The name of the resource group. The name is case insensitive., Type: string
            %   clusterName - The name of the Kusto cluster., Type: string
            %   managedPrivateEndpointName - The name of the managed private endpoint., Type: string
            %   api_version - The API version to use for this operation., Type: string
            %   ManagedPrivateEndpoint - The managed private endpoint parameters., Type: ManagedPrivateEndpoint
            %       Required properties in the model for this call:
            %       Optional properties in the model for this call:
            %           xproperties
            %           systemData
            %
            % No optional parameters
            %
            % Responses:
            %   200: Successfully updated the managed private endpoint.
            %   201: Successfully created the managed private endpoint.
            %   202: Successfully accepted the managed private endpoint.
            %   0: Error response describing why the operation failed.
            %
            % Returns: ManagedPrivateEndpoint
            %
            % See Also: adx.control.models.ManagedPrivateEndpoint

            arguments
              obj adx.control.api.ManagedPrivateEndpoints
              subscriptionId string
              resourceGroupName string
              clusterName string
              managedPrivateEndpointName string
              api_version string
              ManagedPrivateEndpoint adx.control.models.ManagedPrivateEndpoint
            end

            % Create the request object
            request = matlab.net.http.RequestMessage();
            
            % Verify that operation supports returning JSON
            specAcceptHeaders = [...
                "application/json", ...
            ];
            if ismember("application/json",specAcceptHeaders)
                request.Header(end+1) = matlab.net.http.field.AcceptField('application/json');
            else
                error("control:api:managedPrivateEndpointsCreateOrUpdate:UnsupportedMediaType","Generated OpenAPI Classes only support 'application/json' MediaType.\n" + ...
                    "Operation '%s' does not support this. It may be possible to call this operation by first editing the generated code.","managedPrivateEndpointsCreateOrUpdate")
            end
            
            % Verify that operation supports JSON or FORM as input
            specContentTypeHeaders = [...
                "application/json", ...
            ];
            if ismember("application/json",specContentTypeHeaders)
                request.Header(end+1) = matlab.net.http.field.ContentTypeField('application/json');
            elseif ismember("application/x-www-form-urlencoded",specContentTypeHeaders)
                request.Header(end+1) = matlab.net.http.field.ContentTypeField('application/x-www-form-urlencoded');
            else
                error("control:api:managedPrivateEndpointsCreateOrUpdate:UnsupportedMediaType","Generated OpenAPI Classes only support 'application/json' and 'application/x-www-form-urlencoded' MediaTypes.\n" + ...
                    "Operation '%s' does not support this. It may be possible to call this operation by first editing the generated code.","managedPrivateEndpointsCreateOrUpdate")
            end
            
            % No header parameters

            % Configure default httpOptions
            httpOptions = obj.httpOptions;
            % Never convert API response
            httpOptions.ConvertResponse = false;

            % Configure request verb/method
            request.Method = matlab.net.http.RequestMethod('PUT');

            % Build the request URI
            if ~isempty(obj.serverUri)
                % If URI specified in object, use that
                uri = obj.serverUri;
            else
                % If no server specified use base path from OpenAPI spec
                uri = matlab.net.URI("https://management.azure.com");
            end
            % Append the operation end-point
            uri.EncodedPath = uri.EncodedPath + "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Kusto/clusters/{clusterName}/managedPrivateEndpoints/{managedPrivateEndpointName}";

            % Substitute path parameters
            uri.Path(uri.Path == "{" + "subscriptionId" +"}") = subscriptionId;
            uri.Path(uri.Path == "{" + "resourceGroupName" +"}") = resourceGroupName;
            uri.Path(uri.Path == "{" + "clusterName" +"}") = clusterName;
            uri.Path(uri.Path == "{" + "managedPrivateEndpointName" +"}") = managedPrivateEndpointName;

            % Set query parameters
            uri.Query(end+1) = matlab.net.QueryParameter("api-version", api_version);
            
            % Set JSON Body
            requiredProperties = [...
            ];
            optionalProperties = [...
                "xproperties",...
                "systemData",...
            ];
            request.Body(1).Payload = ManagedPrivateEndpoint.getPayload(requiredProperties,optionalProperties);

            % No form body parameters

            % Operation does not require authorization

            % Add cookies if set
            request = obj.applyCookies(request, uri);

            % Call preSend
            [request, httpOptions, uri] = obj.preSend("managedPrivateEndpointsCreateOrUpdate", request, httpOptions, uri);

            % Perform the request
            [response, ~, history] = send(request, uri, httpOptions);

            % Handle cookies if set
            obj.setCookies(history);

            % Call postSend
            response = obj.postSend("managedPrivateEndpointsCreateOrUpdate", response, request, uri, httpOptions);

            % Handle response
            code = response.StatusCode;
            switch (code)
                case 200
                    result = adx.control.models.ManagedPrivateEndpoint(response.Body.Data);
                case 201
                    result = adx.control.models.ManagedPrivateEndpoint(response.Body.Data);
                case 202
                    result = adx.control.models.ManagedPrivateEndpoint(response.Body.Data);
                otherwise % Default output as specified in spec
                    result = adx.control.models.ErrorResponse(response.Body.Data);
            end
        
        end % managedPrivateEndpointsCreateOrUpdate method

        function [code, result, response] = managedPrivateEndpointsDelete(obj, subscriptionId, resourceGroupName, clusterName, managedPrivateEndpointName, api_version)
            % managedPrivateEndpointsDelete No summary provided
            % Deletes a managed private endpoint.
            %
            % Required parameters:
            %   subscriptionId - The ID of the target subscription., Type: string
            %   resourceGroupName - The name of the resource group. The name is case insensitive., Type: string
            %   clusterName - The name of the Kusto cluster., Type: string
            %   managedPrivateEndpointName - The name of the managed private endpoint., Type: string
            %   api_version - The API version to use for this operation., Type: string
            %
            % No optional parameters
            %
            % Responses:
            %   200: OK -- managed private endpoint deleted successfully.
            %   202: Accepted the delete managed private endpoint request.
            %   204: NoContent -- If the managed private endpoint resource is already deleted, this is the expected status code.
            %   0: Error response describing why the operation failed.
            %
            % Returns: 
            %
            % See Also: adx.control.models.

            arguments
              obj adx.control.api.ManagedPrivateEndpoints
              subscriptionId string
              resourceGroupName string
              clusterName string
              managedPrivateEndpointName string
              api_version string
            end

            % Create the request object
            request = matlab.net.http.RequestMessage();
            
            % Verify that operation supports returning JSON
            specAcceptHeaders = [...
                "application/json", ...
            ];
            if ismember("application/json",specAcceptHeaders)
                request.Header(end+1) = matlab.net.http.field.AcceptField('application/json');
            else
                error("control:api:managedPrivateEndpointsDelete:UnsupportedMediaType","Generated OpenAPI Classes only support 'application/json' MediaType.\n" + ...
                    "Operation '%s' does not support this. It may be possible to call this operation by first editing the generated code.","managedPrivateEndpointsDelete")
            end
            
            % No body input, so no need to check its content type
            
            % No header parameters

            % Configure default httpOptions
            httpOptions = obj.httpOptions;
            % Never convert API response
            httpOptions.ConvertResponse = false;

            % Configure request verb/method
            request.Method = matlab.net.http.RequestMethod('DELETE');

            % Build the request URI
            if ~isempty(obj.serverUri)
                % If URI specified in object, use that
                uri = obj.serverUri;
            else
                % If no server specified use base path from OpenAPI spec
                uri = matlab.net.URI("https://management.azure.com");
            end
            % Append the operation end-point
            uri.EncodedPath = uri.EncodedPath + "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Kusto/clusters/{clusterName}/managedPrivateEndpoints/{managedPrivateEndpointName}";

            % Substitute path parameters
            uri.Path(uri.Path == "{" + "subscriptionId" +"}") = subscriptionId;
            uri.Path(uri.Path == "{" + "resourceGroupName" +"}") = resourceGroupName;
            uri.Path(uri.Path == "{" + "clusterName" +"}") = clusterName;
            uri.Path(uri.Path == "{" + "managedPrivateEndpointName" +"}") = managedPrivateEndpointName;

            % Set query parameters
            uri.Query(end+1) = matlab.net.QueryParameter("api-version", api_version);
            
            % No JSON body parameters

            % No form body parameters

            % Operation does not require authorization

            % Add cookies if set
            request = obj.applyCookies(request, uri);

            % Call preSend
            [request, httpOptions, uri] = obj.preSend("managedPrivateEndpointsDelete", request, httpOptions, uri);

            % Perform the request
            [response, ~, history] = send(request, uri, httpOptions);

            % Handle cookies if set
            obj.setCookies(history);

            % Call postSend
            response = obj.postSend("managedPrivateEndpointsDelete", response, request, uri, httpOptions);

            % Handle response
            code = response.StatusCode;
            switch (code)
                case 200
                    result = response.Body.Data;
                case 202
                    result = response.Body.Data;
                case 204
                    result = response.Body.Data;
                otherwise % Default output as specified in spec
                    result = adx.control.models.ErrorResponse(response.Body.Data);
            end
        
        end % managedPrivateEndpointsDelete method

        function [code, result, response] = managedPrivateEndpointsGet(obj, subscriptionId, resourceGroupName, clusterName, managedPrivateEndpointName, api_version)
            % managedPrivateEndpointsGet No summary provided
            % Gets a managed private endpoint.
            %
            % Required parameters:
            %   subscriptionId - The ID of the target subscription., Type: string
            %   resourceGroupName - The name of the resource group. The name is case insensitive., Type: string
            %   clusterName - The name of the Kusto cluster., Type: string
            %   managedPrivateEndpointName - The name of the managed private endpoint., Type: string
            %   api_version - The API version to use for this operation., Type: string
            %
            % No optional parameters
            %
            % Responses:
            %   200: The managed private endpoint object.
            %   0: Error response describing why the operation failed.
            %
            % Returns: ManagedPrivateEndpoint
            %
            % See Also: adx.control.models.ManagedPrivateEndpoint

            arguments
              obj adx.control.api.ManagedPrivateEndpoints
              subscriptionId string
              resourceGroupName string
              clusterName string
              managedPrivateEndpointName string
              api_version string
            end

            % Create the request object
            request = matlab.net.http.RequestMessage();
            
            % Verify that operation supports returning JSON
            specAcceptHeaders = [...
                "application/json", ...
            ];
            if ismember("application/json",specAcceptHeaders)
                request.Header(end+1) = matlab.net.http.field.AcceptField('application/json');
            else
                error("control:api:managedPrivateEndpointsGet:UnsupportedMediaType","Generated OpenAPI Classes only support 'application/json' MediaType.\n" + ...
                    "Operation '%s' does not support this. It may be possible to call this operation by first editing the generated code.","managedPrivateEndpointsGet")
            end
            
            % No body input, so no need to check its content type
            
            % No header parameters

            % Configure default httpOptions
            httpOptions = obj.httpOptions;
            % Never convert API response
            httpOptions.ConvertResponse = false;

            % Configure request verb/method
            request.Method = matlab.net.http.RequestMethod('GET');

            % Build the request URI
            if ~isempty(obj.serverUri)
                % If URI specified in object, use that
                uri = obj.serverUri;
            else
                % If no server specified use base path from OpenAPI spec
                uri = matlab.net.URI("https://management.azure.com");
            end
            % Append the operation end-point
            uri.EncodedPath = uri.EncodedPath + "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Kusto/clusters/{clusterName}/managedPrivateEndpoints/{managedPrivateEndpointName}";

            % Substitute path parameters
            uri.Path(uri.Path == "{" + "subscriptionId" +"}") = subscriptionId;
            uri.Path(uri.Path == "{" + "resourceGroupName" +"}") = resourceGroupName;
            uri.Path(uri.Path == "{" + "clusterName" +"}") = clusterName;
            uri.Path(uri.Path == "{" + "managedPrivateEndpointName" +"}") = managedPrivateEndpointName;

            % Set query parameters
            uri.Query(end+1) = matlab.net.QueryParameter("api-version", api_version);
            
            % No JSON body parameters

            % No form body parameters

            % Operation does not require authorization

            % Add cookies if set
            request = obj.applyCookies(request, uri);

            % Call preSend
            [request, httpOptions, uri] = obj.preSend("managedPrivateEndpointsGet", request, httpOptions, uri);

            % Perform the request
            [response, ~, history] = send(request, uri, httpOptions);

            % Handle cookies if set
            obj.setCookies(history);

            % Call postSend
            response = obj.postSend("managedPrivateEndpointsGet", response, request, uri, httpOptions);

            % Handle response
            code = response.StatusCode;
            switch (code)
                case 200
                    result = adx.control.models.ManagedPrivateEndpoint(response.Body.Data);
                otherwise % Default output as specified in spec
                    result = adx.control.models.ErrorResponse(response.Body.Data);
            end
        
        end % managedPrivateEndpointsGet method

        function [code, result, response] = managedPrivateEndpointsList(obj, subscriptionId, resourceGroupName, clusterName, api_version)
            % managedPrivateEndpointsList No summary provided
            % Returns the list of managed private endpoints.
            %
            % Required parameters:
            %   subscriptionId - The ID of the target subscription., Type: string
            %   resourceGroupName - The name of the resource group. The name is case insensitive., Type: string
            %   clusterName - The name of the Kusto cluster., Type: string
            %   api_version - The API version to use for this operation., Type: string
            %
            % No optional parameters
            %
            % Responses:
            %   200: The list result of managed private endpoints.
            %   0: Error response describing why the operation failed.
            %
            % Returns: ManagedPrivateEndpointListResult
            %
            % See Also: adx.control.models.ManagedPrivateEndpointListResult

            arguments
              obj adx.control.api.ManagedPrivateEndpoints
              subscriptionId string
              resourceGroupName string
              clusterName string
              api_version string
            end

            % Create the request object
            request = matlab.net.http.RequestMessage();
            
            % Verify that operation supports returning JSON
            specAcceptHeaders = [...
                "application/json", ...
            ];
            if ismember("application/json",specAcceptHeaders)
                request.Header(end+1) = matlab.net.http.field.AcceptField('application/json');
            else
                error("control:api:managedPrivateEndpointsList:UnsupportedMediaType","Generated OpenAPI Classes only support 'application/json' MediaType.\n" + ...
                    "Operation '%s' does not support this. It may be possible to call this operation by first editing the generated code.","managedPrivateEndpointsList")
            end
            
            % No body input, so no need to check its content type
            
            % No header parameters

            % Configure default httpOptions
            httpOptions = obj.httpOptions;
            % Never convert API response
            httpOptions.ConvertResponse = false;

            % Configure request verb/method
            request.Method = matlab.net.http.RequestMethod('GET');

            % Build the request URI
            if ~isempty(obj.serverUri)
                % If URI specified in object, use that
                uri = obj.serverUri;
            else
                % If no server specified use base path from OpenAPI spec
                uri = matlab.net.URI("https://management.azure.com");
            end
            % Append the operation end-point
            uri.EncodedPath = uri.EncodedPath + "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Kusto/clusters/{clusterName}/managedPrivateEndpoints";

            % Substitute path parameters
            uri.Path(uri.Path == "{" + "subscriptionId" +"}") = subscriptionId;
            uri.Path(uri.Path == "{" + "resourceGroupName" +"}") = resourceGroupName;
            uri.Path(uri.Path == "{" + "clusterName" +"}") = clusterName;

            % Set query parameters
            uri.Query(end+1) = matlab.net.QueryParameter("api-version", api_version);
            
            % No JSON body parameters

            % No form body parameters

            % Operation does not require authorization

            % Add cookies if set
            request = obj.applyCookies(request, uri);

            % Call preSend
            [request, httpOptions, uri] = obj.preSend("managedPrivateEndpointsList", request, httpOptions, uri);

            % Perform the request
            [response, ~, history] = send(request, uri, httpOptions);

            % Handle cookies if set
            obj.setCookies(history);

            % Call postSend
            response = obj.postSend("managedPrivateEndpointsList", response, request, uri, httpOptions);

            % Handle response
            code = response.StatusCode;
            switch (code)
                case 200
                    result = adx.control.models.ManagedPrivateEndpointListResult(response.Body.Data);
                otherwise % Default output as specified in spec
                    result = adx.control.models.ErrorResponse(response.Body.Data);
            end
        
        end % managedPrivateEndpointsList method

        function [code, result, response] = managedPrivateEndpointsUpdate(obj, subscriptionId, resourceGroupName, clusterName, managedPrivateEndpointName, api_version, ManagedPrivateEndpoint)
            % managedPrivateEndpointsUpdate No summary provided
            % Updates a managed private endpoint.
            %
            % Required parameters:
            %   subscriptionId - The ID of the target subscription., Type: string
            %   resourceGroupName - The name of the resource group. The name is case insensitive., Type: string
            %   clusterName - The name of the Kusto cluster., Type: string
            %   managedPrivateEndpointName - The name of the managed private endpoint., Type: string
            %   api_version - The API version to use for this operation., Type: string
            %   ManagedPrivateEndpoint - The managed private endpoint parameters., Type: ManagedPrivateEndpoint
            %       Required properties in the model for this call:
            %       Optional properties in the model for this call:
            %           xproperties
            %           systemData
            %
            % No optional parameters
            %
            % Responses:
            %   200: Successfully updated the managed private endpoint.
            %   202: Accepted the update request of the managed private endpoint.
            %   0: Error response describing why the operation failed.
            %
            % Returns: ManagedPrivateEndpoint
            %
            % See Also: adx.control.models.ManagedPrivateEndpoint

            arguments
              obj adx.control.api.ManagedPrivateEndpoints
              subscriptionId string
              resourceGroupName string
              clusterName string
              managedPrivateEndpointName string
              api_version string
              ManagedPrivateEndpoint adx.control.models.ManagedPrivateEndpoint
            end

            % Create the request object
            request = matlab.net.http.RequestMessage();
            
            % Verify that operation supports returning JSON
            specAcceptHeaders = [...
                "application/json", ...
            ];
            if ismember("application/json",specAcceptHeaders)
                request.Header(end+1) = matlab.net.http.field.AcceptField('application/json');
            else
                error("control:api:managedPrivateEndpointsUpdate:UnsupportedMediaType","Generated OpenAPI Classes only support 'application/json' MediaType.\n" + ...
                    "Operation '%s' does not support this. It may be possible to call this operation by first editing the generated code.","managedPrivateEndpointsUpdate")
            end
            
            % Verify that operation supports JSON or FORM as input
            specContentTypeHeaders = [...
                "application/json", ...
            ];
            if ismember("application/json",specContentTypeHeaders)
                request.Header(end+1) = matlab.net.http.field.ContentTypeField('application/json');
            elseif ismember("application/x-www-form-urlencoded",specContentTypeHeaders)
                request.Header(end+1) = matlab.net.http.field.ContentTypeField('application/x-www-form-urlencoded');
            else
                error("control:api:managedPrivateEndpointsUpdate:UnsupportedMediaType","Generated OpenAPI Classes only support 'application/json' and 'application/x-www-form-urlencoded' MediaTypes.\n" + ...
                    "Operation '%s' does not support this. It may be possible to call this operation by first editing the generated code.","managedPrivateEndpointsUpdate")
            end
            
            % No header parameters

            % Configure default httpOptions
            httpOptions = obj.httpOptions;
            % Never convert API response
            httpOptions.ConvertResponse = false;

            % Configure request verb/method
            request.Method = matlab.net.http.RequestMethod('PATCH');

            % Build the request URI
            if ~isempty(obj.serverUri)
                % If URI specified in object, use that
                uri = obj.serverUri;
            else
                % If no server specified use base path from OpenAPI spec
                uri = matlab.net.URI("https://management.azure.com");
            end
            % Append the operation end-point
            uri.EncodedPath = uri.EncodedPath + "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Kusto/clusters/{clusterName}/managedPrivateEndpoints/{managedPrivateEndpointName}";

            % Substitute path parameters
            uri.Path(uri.Path == "{" + "subscriptionId" +"}") = subscriptionId;
            uri.Path(uri.Path == "{" + "resourceGroupName" +"}") = resourceGroupName;
            uri.Path(uri.Path == "{" + "clusterName" +"}") = clusterName;
            uri.Path(uri.Path == "{" + "managedPrivateEndpointName" +"}") = managedPrivateEndpointName;

            % Set query parameters
            uri.Query(end+1) = matlab.net.QueryParameter("api-version", api_version);
            
            % Set JSON Body
            requiredProperties = [...
            ];
            optionalProperties = [...
                "xproperties",...
                "systemData",...
            ];
            request.Body(1).Payload = ManagedPrivateEndpoint.getPayload(requiredProperties,optionalProperties);

            % No form body parameters

            % Operation does not require authorization

            % Add cookies if set
            request = obj.applyCookies(request, uri);

            % Call preSend
            [request, httpOptions, uri] = obj.preSend("managedPrivateEndpointsUpdate", request, httpOptions, uri);

            % Perform the request
            [response, ~, history] = send(request, uri, httpOptions);

            % Handle cookies if set
            obj.setCookies(history);

            % Call postSend
            response = obj.postSend("managedPrivateEndpointsUpdate", response, request, uri, httpOptions);

            % Handle response
            code = response.StatusCode;
            switch (code)
                case 200
                    result = adx.control.models.ManagedPrivateEndpoint(response.Body.Data);
                case 202
                    result = adx.control.models.ManagedPrivateEndpoint(response.Body.Data);
                otherwise % Default output as specified in spec
                    result = adx.control.models.ErrorResponse(response.Body.Data);
            end
        
        end % managedPrivateEndpointsUpdate method

    end %methods
end %class


