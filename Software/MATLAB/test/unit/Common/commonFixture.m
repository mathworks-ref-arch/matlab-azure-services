classdef commonFixture < matlab.unittest.fixtures.Fixture
    % Writes the configuration files based on environment variables, this
    % facilities unit testing in CI/CD setups

    % Copyright 2022 The MathWorks, Inc.
    methods
        function setup(~)
            disp 'Writing Configuration Files'

            % Enable pretty printed JSON on >= 21a
            if verLessThan('matlab','9.10') %#ok<VERLESSMATLAB>
                prettyArgs = {};
            else
                prettyArgs = {'PrettyPrint',true};
            end

            % Create Configuration Files Based on Environment
            configFile = fullfile(AzureCommonRoot, 'config', 'test_ConnectionString.json');
            json = jsonencode(struct(...
                'AuthMethod','ConnectionString',...
                'ConnectionString',getenv('STORAGE_CONNECTION_STRING')...
                ),prettyArgs{:});
            f = fopen(configFile,'w'); fwrite(f,json);fclose(f);

            configFile = fullfile(AzureCommonRoot, 'config', 'test_StorageSharedKey.json');
            json = jsonencode(struct(...
                'AuthMethod','StorageSharedKey',...
                'AccountKey',getenv('STORAGE_ACCOUNT_KEY'),...
                'AccountName',getenv('STORAGE_ACCOUNT_NAME')...
                ),prettyArgs{:});
            f = fopen(configFile,'w'); fwrite(f,json);fclose(f);

            configFile = fullfile(AzureCommonRoot, 'config', 'test_Environment.json');
            json = jsonencode(struct(...
                'AuthMethod','Environment',...
                'AccountName',getenv('STORAGE_ACCOUNT_NAME')...
                ),prettyArgs{:});
            f = fopen(configFile,'w'); fwrite(f,json);fclose(f);

            configFile = fullfile(AzureCommonRoot, 'config', 'test_DefaultAzure.json');
            json = jsonencode(struct(...
                'AuthMethod','DefaultAzure',...
                'AccountName',getenv('STORAGE_ACCOUNT_NAME')...
                ),prettyArgs{:});
            f = fopen(configFile,'w'); fwrite(f,json);fclose(f);

            configFile = fullfile(AzureCommonRoot, 'config', 'test_InteractiveBrowser.json');
            json = jsonencode(struct(...
                'AuthMethod','InteractiveBrowser',...
                'TenantId',getenv('AZURE_TENANT_ID'),...
                'ClientId',getenv('AZURE_CLIENT_ID'),...
                'RedirectUrl',getenv('COMMON_REDIRECT_URI'),...
                'TokenCachePersistenceOptions',struct('Name','InteractiveBrowser'),...
                'AccountName',getenv('STORAGE_ACCOUNT_NAME')...
                ),prettyArgs{:});
            f = fopen(configFile,'w'); fwrite(f,json);fclose(f);

            configFile = fullfile(AzureCommonRoot, 'config', 'test_ClientSecret.json');
            json = jsonencode(struct(...
                'AuthMethod','ClientSecret',...
                'TenantId',getenv('AZURE_TENANT_ID'),...
                'ClientId',getenv('AZURE_CLIENT_ID'),...
                'ClientSecret',getenv('AZURE_CLIENT_SECRET'),...
                'AccountName',getenv('STORAGE_ACCOUNT_NAME')...
                ),prettyArgs{:});
            f = fopen(configFile,'w'); fwrite(f,json);fclose(f);

            configFile = fullfile(AzureCommonRoot, 'config', 'test_ClientCertificate.json');
            certFile = fullfile(AzureCommonRoot, 'config', 'test_cert.pem');
            json = jsonencode(struct(...
                'AuthMethod','ClientSecret',...
                'TenantId',getenv('AZURE_TENANT_ID'),...
                'ClientId',getenv('AZURE_CLIENT_ID'),...
                'PemCertificate',certFile,...
                'AccountName',getenv('STORAGE_ACCOUNT_NAME')...
                ),prettyArgs{:});
            f = fopen(configFile,'w'); fwrite(f,json);fclose(f);
            f = fopen(certFile,'w'); fwrite(f,matlab.net.base64decode(getenv('AZURE_CLIENT_CERTIFICATE')));fclose(f);

            configFile = fullfile(AzureCommonRoot, 'config', 'test_DeviceCode.json');
            json = jsonencode(struct(...
                'AuthMethod','DeviceCode',...
                'TenantId',getenv('AZURE_TENANT_ID'),...
                'ClientId',getenv('AZURE_CLIENT_ID'),...
                'Scopes',{{'https://storage.azure.com/.default'}},...
                'TokenCachePersistenceOptions',struct('Name','DeviceCode'),...
                'AccountName',getenv('STORAGE_ACCOUNT_NAME')...
                ),prettyArgs{:});
            f = fopen(configFile,'w'); fwrite(f,json);fclose(f);

            configFile = fullfile(AzureCommonRoot, 'config', 'test_AzureCli.json');
            json = jsonencode(struct(...
                'AuthMethod','AzureCli',...
                'AccountName',getenv('STORAGE_ACCOUNT_NAME')...
                ),prettyArgs{:});
            f = fopen(configFile,'w'); fwrite(f,json);fclose(f);
        end

        function teardown(~)
            disp 'Removing Configuration Files'
            delete(fullfile(AzureCommonRoot,'config','test_*.json'))
            delete(fullfile(AzureCommonRoot,'config','test_cert.pem'))
        end
    end
end